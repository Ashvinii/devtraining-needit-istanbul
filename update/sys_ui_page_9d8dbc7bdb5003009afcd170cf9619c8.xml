<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[var ga = new GlideAjax('HelloWorld');
ga.addParam('sysparm_name','Username');
ga.addParam('sysparm_user_name',"Password");
ga.getXML(HelloWorldParse);

function HelloWorldParse(response) {
   var answer = response.responseXML.documentElement.getAttribute("answer");
   alert(answer);
}]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_58872_needit_practice.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<html>
<body>
<form>
<table width="20%" bgcolor="0099CC" align="center">

<tr>
<td colspan="2"><center><font size="4"><b>HTML Login Page</b></font></center></td>
</tr>

<tr>
<td>Username</td>
<td><input type="text" size="25" name="userid"/></td>
</tr>

<tr>
<td>Password:</td>
<td><input type="Password" size="25" name="pwd"/></td>
</tr>

<tr>
<td ><input type="Reset"/></td>
<td><input type="submit" onclick="check(this.form)" value="Login"/></td>
</tr>

</table>
</form>
<script language="javascript">
function check(form)
{

if(form.userid.value == "ashvini"&amp;&amp; form.pwd.value == "ashvini15")
{
window.open('target.html')
}
else
{
alert("Error Password or Username")
}
}
</script>

</body>
</html>
</j:jelly>]]></html>
        <name>practice</name>
        <processing_script><![CDATA[var request = new sn_ws.RESTMessageV2();
	    	request.setEndpoint('https://dev31251.service-now.com/api/now/v1/table/incident?sysparm_limit=1');
	    	request.setHttpMethod('GET');

	    	//Eg. UserName="admin", Password="admin" for this code sample.
	    	var user = 'admin';
	    	var password = 'Gajanan@2075';

	    	request.setBasicAuth(user,password);
	    	request.setRequestHeader("Accept","application/json");
	    	var response = request.execute();
	    	var t=JSON.parse(response.getBody());

	    	gs.log(response.getBody());
	    	for(var n in t){

	    		var abc=t.result[0];
	    		for ( var j in abc) {

	    			var sub_key = j;
	    			var sub_val = abc[j];
	    			gs.print(sub_key+":-"+sub_val);

	    			if(typeof(sub_val)=="object"){
	    				for(var k in sub_val){
	    					var t1=k;
	    					var t2=sub_val[k];
	    					gs.print(t1+":="+t2);
	    				}
	    			}
	    		}
	    	}
	    ]]></processing_script>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-08-07 09:00:06</sys_created_on>
        <sys_id>9d8dbc7bdb5003009afcd170cf9619c8</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>practice</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ui_page_9d8dbc7bdb5003009afcd170cf9619c8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-08-07 09:21:47</sys_updated_on>
    </sys_ui_page>
</record_update>
